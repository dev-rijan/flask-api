COMPOSE_PROJECT_NAME=api

# In development, having bytecode laying around can cause all sorts of weird
# issues with Docker. These are *.pyc file and the __pycache__/ folder.
PYTHONDONTWRITEBYTECODE=true

# Which environment is running? These should be "development" or "production".
FLASK_ENV=production

# You should generate a random string of 64+ characters for this value in prod.
SECRET_KEY=insecure_key_for_dev

# Do you want code reloading to work with your app server? Don't do this in
# production (it's turned off by default, so don't worry about it).
WEB_RELOAD=false

# Which address and port should gunicorn bind to?
#WEB_BIND=0.0.0.0:8000

# How many workers and threads should your app use?
WEB_CONCURRENCY=1
#PYTHON_MAX_THREADS=1

# Should Docker restart your containers if they go down?
DOCKER_RESTART_POLICY=no

# What healthcheck test command do you want to run? In development, having it
# curl your web server will result in a lot of log spam, so setting it to
# /bin/true is an easy way to make the healthcheck do basically nothing.
DOCKER_HEALTHCHECK_TEST=/bin/true

# How long should Docker wait before it SIGKILLs your process?
#DOCKER_STOP_GRACE_PERIOD=3s

# What port should be published back to the Docker host for your app server?
DOCKER_WEB_PORT=8000

# What volume path should be used?
DOCKER_WEB_VOLUME=.:/app

# Flask app config
FLASK_APP='src.app'
FLASK_APP_VERSION='0.1.0'
SERVER_NAME='http://localhost:8000'

DATABASE_URI='mysql+pymysql://username:password@server_name:3306/db_name'

# Flask-Mail configurations
MAIL_DEFAULT_SENDER='contact@local.host'
MAIL_SERVER='smtp.mailtrap.io'
MAIL_PORT=2525
MAIL_USE_TLS=True
MAIL_USE_SSL=False
MAIL_USERNAME='9e3458f6344247'
MAIL_PASSWORD='38b1fb2161edc3'

#jwt configurations
JWT_SECRET_KEY="secret key"
# When access token will expire(in minute)?
ACCESS_TOKEN_EXPIRES_IN=10
# When refresh token will expire(in minute)?
REFRESH_TOKEN_EXPIRES_IN=5

#Admin user config
SEED_ADMIN_EMAIL="rijan@test.test"
SEED_ADMIN_USERNAME="rijan"
SEED_ADMIN_PASSWORD="admin45678"
